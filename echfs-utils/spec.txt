echidnaFS specification

blocks start with block 0, and are addressed as quad-words

The file system should be able to be addressed using 32-bit addressing too, in a "compatibility mode"
Of course, when addressing using 32-bit values the maximum number of blocks will be 2^32, same
thing for file sizes and other values.

block 0 ----> block 15
    Reserved blocks. Always. A bigger block size will result in more reserved space.

block 0 contains the identity table as follows:
    byte 0-->3          reserved for jump instruction, or other purposes
    db '_ECH_FS_'       echidnaFS signature
    qword               total block count
    qword               length of the main directory in blocks (usually 5% of the total blocks)
    qword               bytes per block (MUST be a multiple of 512)

Allocation table. Starts at block 16.
    Contains a chain of qwords. One per physical block, hence the size of the table (in blocks)
    can be calculated as: (total_blocks * sizeof(uint64_t)) / block_size
    Adjusting for an eventual remainder.

    A value of 0x00000000_00000000 means "Free-for-use block"
    Values from 0x00000000_00000001 to 0xFFFFFFFF_FFFFFFEF mark the next block in the chain.
    A value of 0xFFFFFFFF_FFFFFFF0 means "Reserved block" (the first 16 blocks are always marked as reserved,
                                                           along with the directory and allocation table blocks)
    A value of 0xFFFFFFFF_FFFFFFFF means "End-of-chain"

Main directory. From the first block after the end of the allocation table, size specified in the ID table in block 0.
    Contains entries representing files, directories, or other objects.

Directory entry structure:
    qword               directory ID of the entry (0 stands for end-of-directory,
                                                   0xFFFFFFFF_FFFFFFFF stands for root,
                                                   0xFFFFFFFF_FFFFFFFE stands for deleted entry)
    byte                object type (0=file, 1=dir, rest to be implemented)
    times 218 db        zero-terminated ascii string containing the name of the object. max. 217 chars+0
    byte                permissions
    word                owner ID
    word                group ID
    qword               64-bit unix time: last modification date
    qword               starting block (if file), directory ID (if directory)
    qword               file size in bytes (0 if directory, shouldn't matter anyways)
